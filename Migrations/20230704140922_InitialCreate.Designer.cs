// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using rowi_practice.Context;

#nullable disable

namespace rowi_practice.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20230704140922_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("rowi_practice.Models.Administartor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("AccessLevel")
                        .HasColumnType("int");

                    b.Property<string>("LogCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PassCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Administartor");
                });

            modelBuilder.Entity("rowi_practice.Models.ExistingProblem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Contains")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DataCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("EndPointDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tests")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ExistingProblem");
                });

            modelBuilder.Entity("rowi_practice.Models.Solution", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("Author_Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Solution");
                });

            modelBuilder.Entity("rowi_practice.Models.SolutionToProblem", b =>
                {
                    b.Property<long>("SolutionId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProblemId")
                        .HasColumnType("bigint");

                    b.HasKey("SolutionId", "ProblemId");

                    b.ToTable("SolutionToProblem");
                });

            modelBuilder.Entity("rowi_practice.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LogCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PassCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("User");
                });
#pragma warning restore 612, 618
        }
    }
}
